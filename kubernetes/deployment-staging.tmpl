apiVersion: v1
data:
  nginx.conf: |+
    upstream docker-panoptes {
      server localhost:81;
    }

    server {
      server_name panoptes-staging.zooniverse.org;
      include /etc/nginx/ssl.default.conf;
      gzip_types *;

      proxy_buffer_size 8k;
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;

      location = /commit_id.txt {
        root /static-assets/;
        expires off;
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, HEAD';
        add_header 'Access-Control-Allow-Credentials' 'true';
      }

      location ~ ^/api-assets/ {
        root /static-assets/;
        gzip_static on; # to serve pre-gzipped version
        expires max;
        add_header Cache-Control public;
      }

      location = /favicon.ico {
        root /static-assets/;
        expires max;
        add_header Cache-Control public;
      }

      location = /robots.txt {
        root /static-assets/;
        expires max;
        add_header Cache-Control public;
      }

      location /health_check {
        proxy_set_header X-Forwarded-Proto https;
        proxy_pass http://docker-panoptes;
      }

      location / {
        # avoid attacker setting the host value for links in rails_app
        # https://github.com/rails/rails/issues/29893
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_pass http://docker-panoptes;
      }
    }
kind: ConfigMap
metadata:
  name: panoptes-nginx-conf-staging
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: panoptes-staging-shared
data:
  RAILS_ENV: staging
  ZOO_STREAM_KINESIS_STREAM_NAME: zooniverse-staging
  ZOO_STREAM_SOURCE: panoptes
  DUMP_CONGESTION_OPTS_INTERVAL: "60"
  DUMP_CONGESTION_OPTS_MIN_DELAY: "60"
  CORS_ORIGINS_REGEX: '^https?:\/\/([a-z0-9-]+\.zooniverse\.org|[a-z0-9-]+\.(pfe-)?preview\.zooniverse\.org)(:\d+)?$'
  DESIGNATOR_API_HOST: https://designator-staging.zooniverse.org/
  DESIGNATOR_API_USERNAME: staging
  EMAIL_EXPORT_S3_BUCKET: zooniverse-exports
  EVENTS_API_USERNAME: staging_api
  REDIRECTS_BASE: https://master.pfe-preview.zooniverse.org
  REDIRECTS_PASSWORD_RESET: /#/reset-password
  REDIRECTS_UNSUBSCRIBE: /#/unsubscribe
  MAILER_ADDRESS: email-smtp.us-east-1.amazonaws.com
  MAILER_DOMAIN: zooniverse.org
  MEMCACHE_SERVERS: 'panoptes-staging-memcached:11211'
  NEW_RELIC_APP_NAME: Panoptes Staging
  NEW_RELIC_LOG_LEVEL: info
  NEW_RELIC_MONITOR_MODE: 'true'
  PAGE_SIZE_LIMIT: '100'
  REDIS_URL: 'redis://panoptes-staging-redis:6379/0'
  SIDEKIQ_CONCURRENCY: '4'
  STORAGE_ADAPTER: aws
  STORAGE_BUCKET: zooniverse-static
  STORAGE_PREFIX: panoptes-uploads.zooniverse.org/staging/
  TALK_API_HOST: https://talk-staging.zooniverse.org
  TALK_API_USER: '1'
  TALK_API_APPLICATION: '1'
  USER_SUBJECT_LIMIT: '100'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: panoptes-staging-app
  labels:
    app: panoptes-staging-app
spec:
  selector:
    matchLabels:
      app: panoptes-staging-app
  template:
    metadata:
      labels:
        app: panoptes-staging-app
    spec:
      containers:
        - name: panoptes-staging-app
          image: zooniverse/panoptes:__IMAGE_TAG__
          resources:
            requests:
              memory: "700Mi"
              cpu: "50m"
            limits:
              memory: "700Mi"
              cpu: "1000m"
          livenessProbe:
            httpGet:
              path: /
              port: 81
              httpHeaders:
                 - name: X-Forwarded-Proto
                   value: https
          envFrom:
          - secretRef:
              name: panoptes-common-env-vars
          - secretRef:
              name: panoptes-staging-env-vars
          - configMapRef:
              name: panoptes-staging-shared
          volumeMounts:
            - name: static-assets
              mountPath: "/static-assets"
            - name: jwt-staging
              mountPath: "/rails_app/config/keys"
              readOnly: true
          lifecycle:
            postStart:
              exec:
                command: ["/bin/bash", "-c", "cp -R /rails_app/public/* /static-assets"]
        - name: panoptes-staging-nginx
          image: zooniverse/apps-nginx:xenial
          resources:
            requests:
              memory: "100Mi"
              cpu: "10m"
            limits:
              memory: "100Mi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /
              port: 80
              httpHeaders:
                 - name: X-Forwarded-Proto
                   value: https
            initialDelaySeconds: 10
          ports:
            - containerPort: 80
          volumeMounts:
            - name: static-assets
              mountPath: "/static-assets"
            - name: panoptes-nginx-config
              mountPath: "/etc/nginx-sites"
      volumes:
        - name: static-assets
          emptyDir: {}
        - name: panoptes-nginx-config
          configMap:
            name: panoptes-nginx-conf-staging
        - name: jwt-staging
          secret:
            secretName: panoptes-doorkeeper-jwt-staging
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: panoptes-staging-app
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: panoptes-staging-app
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 80
---
apiVersion: v1
kind: Service
metadata:
  name: panoptes-staging-app
spec:
  selector:
    app: panoptes-staging-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: panoptes-staging-sidekiq
  labels:
    app: panoptes-staging-sidekiq
spec:
  selector:
    matchLabels:
      app: panoptes-staging-sidekiq
  template:
    metadata:
      labels:
        app: panoptes-staging-sidekiq
    spec:
      containers:
        - name: panoptes-staging-sidekiq
          image: zooniverse/panoptes:__IMAGE_TAG__
          resources:
            requests:
              memory: "700Mi"
              cpu: "50m"
              ephemeral-storage: "10Gi"
            limits:
              memory: "700Mi"
              cpu: "500m"
              ephemeral-storage: "10Gi"
          args: ["/rails_app/scripts/docker/start-sidekiq.sh"]
          envFrom:
          - secretRef:
              name: panoptes-common-env-vars
          - secretRef:
              name: panoptes-staging-env-vars
          - configMapRef:
              name: panoptes-staging-shared
          volumeMounts:
          - mountPath: /tmp
            name: panoptes-staging-dumpworker-data
          - name: jwt-staging
            mountPath: "/rails_app/config/keys"
            readOnly: true
      volumes:
        - name: panoptes-staging-dumpworker-data
          emptyDir: {}
        - name: jwt-staging
          secret:
            secretName: panoptes-doorkeeper-jwt-staging
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: panoptes-staging-sidekiq
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: panoptes-staging-sidekiq
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 95
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: panoptes-staging-redis
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: azurefile
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: panoptes-staging-redis
  labels:
    app: panoptes-staging-redis
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: panoptes-staging-redis
  template:
    metadata:
      labels:
        app: panoptes-staging-redis
    spec:
      initContainers:
        - name: disable-thp
          image: busybox
          volumeMounts:
            - name: host-sys
              mountPath: /host-sys
          command: ["sh", "-c", "echo never >/host-sys/kernel/mm/transparent_hugepage/enabled"]
      containers:
        - name: panoptes-staging-redis
          image: redis:6.0.5
          args: ['--appendonly yes', '--appendfsync no']
          resources:
            requests:
              memory: "100Mi"
              cpu: "10m"
            limits:
              memory: "100Mi"
              cpu: "500m"
          volumeMounts:
          - name: panoptes-staging-redis-data
            mountPath: "/data"
      volumes:
        - name: panoptes-staging-redis-data
          persistentVolumeClaim:
            claimName: panoptes-staging-redis
        - name: host-sys
          hostPath:
            path: /sys
---
apiVersion: v1
kind: Service
metadata:
  name: panoptes-staging-redis
spec:
  selector:
    app: panoptes-staging-redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: panoptes-staging-memcached
  labels:
    app: panoptes-staging-memcached
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: panoptes-staging-memcached
  template:
    metadata:
      labels:
        app: panoptes-staging-memcached
    spec:
      containers:
        - name: panoptes-staging-memcached
          image: memcached:1.6.6
          args: ['-m 90']
          resources:
            requests:
              memory: "100Mi"
              cpu: "10m"
            limits:
              memory: "100Mi"
              cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: panoptes-staging-memcached
spec:
  selector:
    app: panoptes-staging-memcached
  ports:
    - protocol: TCP
      port: 11211
      targetPort: 11211
  type: NodePort
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: panoptes-staging-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    certmanager.k8s.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
    nginx.ingress.kubernetes.io/set-real-ip-from: "10.0.0.0/8"
spec:
  tls:
  - hosts:
    - panoptes-staging.zooniverse.org
    secretName: panoptes-staging-tls-secret
  rules:
  - host: panoptes-staging.zooniverse.org
    http:
      paths:
      - backend:
          serviceName: panoptes-staging-app
          servicePort: 80
        path: /(.*)