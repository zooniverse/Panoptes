FORMAT: 1A
HOST: http://beta.api.zooniverse.org/

# Panoptes API
Panoptes is an api to support *Citizen Science Crowdsourcing Projects*, including managing subjects, describing project interfaces, persisting classifications, and supporting users collecting subjects.  

## Authentication
Panoptes supports OAuth2 using the [doorkeeper](http://github.com/doorkeeper-gem/doorkeeper) gem.

## Media Types
Panoptes uses standard JSON to represent resources. However, the API is versioned to allow for future flexibility. All requests and responses should use the `application/vnd.api+json; version=1` media type.

# Group Collections 
Collections related resources of the **Panoptes API**

## Collection [/collections/{owner_name}/{collection_name}]
A single Collection object respenting a group of subjects from a project a user has collected together. 

The Collection resource has the following attributes:

- id
- created_at
- updated_at
- name
- display_name
- description

*id* and *created_at* are assigned when the resource is created.

+ Parameters
    + owner_name (string) ... Name of the owner (user or user group) that created the collection
    + collection_name (string) ... Name of the collection

+ Model (application/vnd.api+json; version=1)

    JSON respresentation of the Collection resource. It also includes links to subjects within the collection

    + Headers

            Link: <http:/beta.api.zooniverse.org/collections/stuart/cool_flowers>;rel="self", http:/beta.api.zooniverse.org/collections/stuart/cool_flowers/subjects>;rel="subjects", <http:/beta.api.zooniverse.org/users/stuart>;rel="owner"

    + Body

            {
                "id": 51,
                "created_at": "2014-04-15T10:41:14Z",
                "updated_at": "2014-04-20T10:41:14Z",
                "name": "cool_flowers",
                "display_name": "Stuart's Cool Flowers",
                "description": "Just some cool looking flowers",
                "self": "/collections/stuart/cool_flowers"
                "owner": "/users/stuart",
                "subjects": "/collections/stuart/cool_flowers/subjects"
            }

### Retrieve a Single Collection [GET]
+ Response 200

    [Collection][]

### Edit a Collection [PATCH]
To edit a Collection send a JSON object with updated values for one or more of the Collection resource attributes. `updated_at` will be updated to reflect the time the request was received. Other fields will not be changed if they are not included in the request. 
+ Request

        {
            "description": "Make this a little better..."
        } 

+ Response 200

    [Collection][]

### Delete a Collection [DELETE]
+ Response 204

## Collections Collection [/collections{?project,page}]
Collection of all Collections. 

It contains a list of *Collections*. 

+ Model (application/vnd.api+json; version=1)

    JSON representation of the Collection Collection resource. Included collections should be full representations of the resource. 

    + Headers
            
            Link: <http:/beta.api.zooniverse.org/collections?page=2>;rel="next", <http:/beta.api.zooniverse.org/collections?page=5>;rel="prev"

    + Body

            {
                "collections" [{
                     {
                        "id": 51,
                        "created_at": "2014-04-15T10:41:14Z",
                        "updated_at": "2014-04-20T10:41:14Z",
                        "name": "cool_flowers",
                        "display_name": "Stuart's Cool Flowers",
                        "description": "Just some cool looking flowers",
                        "self": "/collections/stuart/cool_flowers"
                        "owner": "/users/stuart",
                        "subjects": "/collections/stuart/cool_flowers/subjects"
                     }
                }]
                "next": "/collections?page=2",
                "prev": "/collections?page=5"
            }

### List all Collections [GET]
+ Parameters
    + project (optional, string) ... String name of a project in the form *:owner_name/:project_name*
    + page (optional, integer) ... Integer of the next page. 1 by default

+ Response 200

    [Collections Collection][]

### Create a Collection [POST]
To create a new Collection send a JSON representation containing at least a name, display_name, and owner. A description and array of subject ids may also be included.

+ Request

        {
            "name": "cool_flowers",
            "display_name": "Stuart's Cool Flowers",
            "owner": "stuart",
            "subjects": [1, 40, 20],
            "description": "Just some cool looking flowers"
        }

+ Response 201

    [Collection][]

# Group Subjects

## Subject [/subjects/{zooniverse_id}]
A single Subject object representing a media object or group of media objects to be classified and attached metadata. 

A Subject resource has the following attributes:

- id
- created_at
- updated_at
- zooniverse_id
- locations
- metadata

*id*, *created_at*, and *zooniverse_id* are assigned when the resource is created

+ Parameters
    + zooniverse_id (string) ... a three leter designation followed by a base26 number that is unique to the subject across all Zooniverse projects

+ Model (application/vnd.api+json; version=1)

    JSON API representation of the Subject resource

    + Headers
            
            Link: <http://beta.api.zooniverse.org/subjects/ZOO0000001>;rel="self"

    + Body

            { 
                subjects: [{
                    "id": 81,
                    "created_at": "2014-05-10T10:47:10Z",
                    "updated_at": "2014-05-10T10:47:10Z",
                    "zooniverse_id": "ZOO00000001",
                    "locations": {
                        "standard": "http://subjects.zooniverse.org/standard/ZOO00000001.png"
                    },
                    "metadata": {
                        "magnitude": "8.1"
                    },
                    href: "/subjects/ZOO00000001"
                }]
            }

### Retrieve a Single Subject [GET]
+ Response 200

    [Subject][]

### Edit a Subject [PATCH]
To edit a Subject send a JSON object with updated values for either the *location* or *metadata* fields. Other fields are not editable. *location* or *metadata* must contain a complete representation of the new version of the field. 
+ Request
  
        {
            "location": {
                "standard": "http://my.new.io/standard_image.png"
            }
        }

+ Response 201

    [Subject][]

### Delete a Subject [DELETE]
+ Response 204

## Subject Collection [/subjects{?page,page_size}]
Collection of all Subjects. 

It returns a list of *Subjects*
+ Model (application/vnd.api+json)

    JSON API representation of Subject Collection resource. Included subjects should be full representations of the resource.

    + Headers
          
            Link: <http:/beta.api.zooniverse.org/subjects?page=2&page_size=3>;rel="next", <http:/beta.api.zooniverse.org/subjects?page=3&page_size=3>;rel="prev"

    + Body

            {
                "subjects": [{
                    "id": 81,
                    "created_at": "2014-05-10T10:47:10Z",
                    "updated_at": "2014-05-10T10:47:10Z",
                    "zooniverse_id": "ZOO00000001",
                    "locations": {
                        "standard": "http://subjects.zooniverse.org/standard/ZOO00000001.png"
                    },
                    "metadata": {
                        "magnitude": "8.1"
                    },
                    href: "/subjects/ZOO00000001"
                },{
                    "id": 82,
                    "created_at": "2014-05-11T10:47:10Z",
                    "updated_at": "2014-05-11T10:47:10Z",
                    "zooniverse_id": "ZOO00000002",
                    "locations": {
                        "standard": "http://subjects.zooniverse.org/standard/ZOO00000002.png"
                    },
                    "metadata": {
                        "magnitude": "1.1"
                    },
                    href: "/subjects/ZOO00000001"
                }],
                "meta": {
                    "subjects": {
                        "page": 1,
                        "page_size": 2,
                        "count": 6,
                        "include": [],
                        "page_count": 3,
                        "previous_page": 3,
                        "next_page": 2,
                        "previous_href": "/subjects?page=3page_size=2",
                        "next_href": "/subjects?page=2&page_size=2"
                    }
                }
            }
              
### List all Subjects [GET]
+ Parameters
    + page_size (optional, integer) ... Number of items per page. Default: 20, Min: 1, Max: 100
    + page (optional, integer) ... Integer Index of the next page. Default: 1

+ Response 200

    [Subject Collection][]

### Create a Subject [POST]
To create a new subject send a JSON representation containing at least a single *location* field. 

+ Request
        
        {
            "location": {
                "standard": "http://myhostedimage.com/image_name.png"
            }
        }

+ Response 201

    [Subject][]
